# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  main:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/python:3.11
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Check python version"
          command: "python --version"
      - run:
          name: "Install the requirements"
          command: "chmod +x scripts/install.sh; bash -v ./scripts/install.sh"
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: "Run selenoid"
          command: "docker run -d --name selenoid -p 4444:4444 -v /var/run/docker.sock:/var/run/docker.sock -v ${PWD}:/etc/selenoid/ aerokube/selenoid:latest-release"
      - run:
          name: "Run the tests"
          command: "chmod +x scripts/run.sh; bash -v ./scripts/run.sh"
      - run:
          name: "Generate the test report"
          command: "chmod +x scripts/report.sh; bash -v ./scripts/report.sh"
          when: always
      - store_test_results:
          path: /home/circleci/project/allure-report
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  aqa-engineer-test-task:
    jobs:
      - main
